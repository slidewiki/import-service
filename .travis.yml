language: node_js
node_js: 6
sudo: required
git:
  depth: 5
branches:
  only:
  - "/^(?i:SWIK)-.*$/"
  - master
cache:
  directories:
  - "./application/node_modules"
before_install:
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/install_compose.sh ; fi
- cd application
before_script:
- npm run start:mongodb
script:
- sleep 15
- npm run lint
after_success:
- cd ..
- openssl aes-256-cbc -K $encrypted_63a4dccd475b_key -iv $encrypted_63a4dccd475b_iv -in deployment_keys.tar.enc -out deployment_keys.tar -d
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/dockerhub.sh ; fi
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/deploy.sh ; fi
- cd application
after_script:
- npm run coverall
- npm run stop:mongodb
- rm -f deployment_keys.tar
- rm -f ~/.docker/{cert.pem,key.pem,ca.pem,config.json}
services:
- docker
notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: pqzpy2C6dwXNQ3ARYsICmHnbMzQLBj5wdkdGtXmPuLsNUgG9SP9uYlUCg7X5Uy64pXMY+YpOmlXLcuBrk0GJbb4wyTXNmRu2J5wjtle7N4H/8Qj4WAZskaUEw9xFaHhefeVxCExWv7+uK/cHi0ex0/it9MCeV7Kem0LzTYBGIO7yffqrNSqfABUyV2krbxWcwFTMWytvPhm+j6B2Nn1FN+g5aQvvZZN653yPEoRflCHSuwTT1zy0fKV43RuP5PvEkOpNqD/poNlLBmdlZLku/s5kuzfbOtMbASnDbAwJL1Z2m4+xVeOlYMCarARVHoR3mLzNrpn7EiGkAaDByHApEaYtD55k/BTmynPrH+uWQYbQnuL6RocbIC/ZImE7zi/LBBordtJT2NYM+A3pxFPCOGg8a8y6b1uPIFjdBuMQ95OyGT3reS36Oz572YFUOvnq4qLsD0yxYxfBgZcAgBwvZ8NzLZ15cWXTanK6SR9d/C2tC20ASFXxfJy1jrsB75vIN8olCytGmUz9KUX2Cruogv30kdQqvbtzvU6cfAkWC5sT8pOsZ2LMeNmIVNPSkFkzbvWTxVGQN/SMu/NCFXz+G3W4XumRT/DP4wvuANrn3/LkWN/p9F5Jv1J4KRQ79ur2DpYg/A3bL2lAO9sXpy8qK4p9Pu7rr+vEoBEGs2pQRXU=
env:
  global:
  - DOCKER_COMPOSE_VERSION=1.6.2
  - DATABASE_PORT=27018
  - secure: btby9l29vG/0m9zSFMhIVSJ3Y2qWk0ctVApdpZp8JCvRttuvvCaTo195emmItUc1e4E8rXDSPQyRS9zZMLumwOblS9Z1Acg2c1bOPWEsE/9gUF8KU1ZVJraT2jYRN8YTBqUY8MQFyT1/bb4N2yH5IqV97/JL5wDPz1wPCXwBaozaxCDPVp+E9LKgqvUiI493TnV0AtHu+csktz4WbDtnkR76LJZFQGLEt6xMBW9pSy1vKW0mtpwiMbotEy1M2/7LFP9Wz6R5We2LaIjJHfzob+hAIsV05y6GUEci/nuEC/CQCkNghM5KqBnuWpHd3+qyn5VgqoyNEjyQCkDcqxIohiWoP4kRIf3m5vpJjGrwmHgrSBiatVcbbE0GQJVWjFdQbSGczzV8EWdhFtAYT2rLkoRQW/ufmqo/vUkaN+jOhWGl8D901GaE70XfDLxv/pzBwtbIa6xU4BgKlKQn7KhON1FRc5igSST6lL7cSz1BdfFQSdAxzdnlVM177G+pMAKec5ONZJJr509jedudNvdz35I/8isxKkYBd/uFoecuxh6JTgv7sTgfNeFx3GlnSRKUynlT5yfjN8xJ7Jt96Wnbqs5llzGos2gWh6p1w4LC05j/yro8C8P/qwzdV10v0+t8pwSeY29GXb+Tryex9pEbfCOfxNDLVCKkg88j540yv1s=
  - secure: zI+Pc19fRqYk6hIOGTtEQFmpwlCPvzz1A5UTAHymeJuFLYj8Rua5dI9qE1IE99mw6rxL7qIgwZZvxptgpPeNHEYtYUMIrGF5juk1Y/y32HTu3vtxXde/g+szMa+Se71XvISpk9PeG2x/KIUL83Li1ThGFpe7krhitK/mMyq0hO7D15C/gwhaJ0aSI7nvfrizg8+c8s6BBmLAIVKFdquv1/qmdmSZmxK0Ng9WkChqu5ApK2Ov2o9OWw0u0Ah8+GdL/CZqUX+WMuQrNE0KLIGdnfIPLJ/A2S+jUgzOcF6xLXT5dmoRTsafUOlgXZtrvuiIFf31tlRYpE6zX0uIvdwTBUf2EEZ9QV/WaG27R4sFTJZMRSo+qpKI0XXbV+0QQzRv7+nDRpulho68yL2rXWEA5Y7K6l5rK4bytOH8hLX5MAC29LO50xbuA/Rro/SCrq27J5TOEoWdLwYHaN6LbPOfTFjB/UC7mMFmzAbBYJeP6r7oOeqwDc/Vvqs470JAH33v4iGSXTb84HdnV9xtD92O5C3RF7JbdAiE40GejT43lRZ7jShy8ZBExyj7LUNOHH6KZOVKjoEKl2ahf5WNaaJqSxZtAQFzKBKDX0uOF1aNb4jXJDUohA6KsOATBRjf+7ScQ+foA+jUA1pI64MvlR9eQWiyL2Ufg+uFi/aKil9hPAQ=
  - secure: ElA97cYu35LLgkF+2UaLPiwTkwFVMhTjJv/+9xlEe7lXFcDCgLzB/fYhdYYCQKN2y6RmXDaoAjLpLvPmlVGNqbC0twAJDuVUXhWkj1HcFJyp3U0XKE1ZseuEY6WApIahU8vVzGWEUfFXf1rvuYCf++36izd3pIlu5hxGWqinjmvxWkPWObwRTe4CPiEaXDCT/weHAp5DyZdhfINsEKtgwBNP9/LV9eNXtleflqE61iIh/fQeAfnY3R5c/vSyZYwP4tSLPQV/sFfZejLn/9CWRopPClqDos+8l443Abkj28ZdtQCQqtqluIy+53Vie02f1CYSqYpwFUdf/a6ydNYDjOfJJVxdXlYl1ghv8llzhFCvAiOXhHYceKgc/7kYjTE0eJ13zyJbwKAUp8lCV2MWdbbFSDuNTk843S0Z68Fn1YuBwzeEylm1uSUWHkIYN5QYY7pMFA6yaIKc4ff6IMDtJ5Z6WUXiYb0vhOSx8iILYTUV/y6tm4HYeC+e/vh+x/WiMq0bgpHlqLIU5Yp2VfZ+mFUPBFLGbdEh+xi1vtMrb4IEVSvb191e2S+8dsEF9q7RgVh1Gf0iSWt0rKLcbxpmUBu0/ITRcI8je8u0sRAs6kE+5ZvUyjH3kiRR9aCXuEVA9h6E5HyAdGVE+iDRmc3YdwOVFblMK0HMQjqccienmds=
