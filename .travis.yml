language: node_js
node_js: 6
sudo: required
git:
  depth: 5
branches:
  only:
  - "/^(?i:SWIK)-.*$/"
  - master
cache:
  directories:
  - "./application/node_modules"
before_install:
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/install_compose.sh ; fi
- cd application
before_script:
- npm run start:mongodb
script:
- sleep 15
- npm run lint
after_success:
- cd ..
- openssl aes-256-cbc -K $encrypted_2036d518b976_key -iv $encrypted_2036d518b976_iv -in deployment_keys.tar.enc -out deployment_keys.tar -d
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/dockerhub.sh ; fi
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/deploy.sh ; fi
- cd application
after_script:
- npm run coverall
- npm run stop:mongodb
- rm -f deployment_keys.tar
- rm -f ~/.docker/{cert.pem,key.pem,ca.pem,config.json}
services:
- docker
notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: pqzpy2C6dwXNQ3ARYsICmHnbMzQLBj5wdkdGtXmPuLsNUgG9SP9uYlUCg7X5Uy64pXMY+YpOmlXLcuBrk0GJbb4wyTXNmRu2J5wjtle7N4H/8Qj4WAZskaUEw9xFaHhefeVxCExWv7+uK/cHi0ex0/it9MCeV7Kem0LzTYBGIO7yffqrNSqfABUyV2krbxWcwFTMWytvPhm+j6B2Nn1FN+g5aQvvZZN653yPEoRflCHSuwTT1zy0fKV43RuP5PvEkOpNqD/poNlLBmdlZLku/s5kuzfbOtMbASnDbAwJL1Z2m4+xVeOlYMCarARVHoR3mLzNrpn7EiGkAaDByHApEaYtD55k/BTmynPrH+uWQYbQnuL6RocbIC/ZImE7zi/LBBordtJT2NYM+A3pxFPCOGg8a8y6b1uPIFjdBuMQ95OyGT3reS36Oz572YFUOvnq4qLsD0yxYxfBgZcAgBwvZ8NzLZ15cWXTanK6SR9d/C2tC20ASFXxfJy1jrsB75vIN8olCytGmUz9KUX2Cruogv30kdQqvbtzvU6cfAkWC5sT8pOsZ2LMeNmIVNPSkFkzbvWTxVGQN/SMu/NCFXz+G3W4XumRT/DP4wvuANrn3/LkWN/p9F5Jv1J4KRQ79ur2DpYg/A3bL2lAO9sXpy8qK4p9Pu7rr+vEoBEGs2pQRXU=
env:
  global:
  - DOCKER_COMPOSE_VERSION=1.6.2
  - DATABASE_PORT=27018
  - secure: B6pfvTQqsjVO8HmD5mLsHzDhm4BUodJQTpn5tel2upZADc+E/9sbhCcPmYuDYqbE8ZsBbrpRA4860ravNPY9sx/ebXJ6iSLK9gZVVFX7Um0xcJXCmsl23W8zpOjhZvmaCo8Q+GOfBh5ON2Fg6VSxa76vE1Lo7kRgR0bMcRhqVbJcyYsz2/U6ICXZDfb7z61ck2ZLKkJI2VwMARcLu0CPn5o7arHJroW1I2DXavPMmnf0LUmxRFFoeNrNG8Rq7pvVSCV4mUPOv1P2+vF3b2WtiPRt8b0fRGZyQQlHEloizzwe7ZVP+tQWZG2g5bM0jXPoZZWXVGQ4oLo0KaM5/xDFq67XroYA8rpTPRFZL8QXWWGOWhJHzulPEZwpRPaDjr/xzu+GXcfMtxl4+8G1IPwq5aJqzKvw/ijMom8DWsZKo4NRHITyGGvafPp47cGfdePdU0YBszqS7XZq8Fs8mQayD+AAJHBL7MgYN+JusW1Hne0iXNPInMdme/ShbKyJMpzYxj7H63rU+20GN1SVsbO96lZl0QUC+QdiFS/8jCf45Q4l/B2EoH8YJcSbp83zUd/2Mx3dXBXCRUvN4ATDbWrek4gl2kVd0k988zfQhHstVBhYIKLXzgwLfETvyOXO9kc5E4cEdeS/QWLSYv4eKoTDa99gqJiqMVQ0FzylA8Iuucw=
  - secure: g7LFyTyq/FHBtZxpKga+B2ixsRleKA3bC4Z8/8pCtGnUuhCjZIgzOInNs6ptDMTyFuiqK/3JsSc7ogMR5emWvkY1yVaMw9b2SUDfV4RtaUwqE6u1rvXd5UmZprkzxkBVpPcXrDH2n/FPXAfvOcK9653nwpAmljGgWN8sLx83Iw3KOOP8TxxFEtHYmH61RbeqjBpSsulo/kOXApvWpu+zRaoEfynTlg31xBw1y+uS6Y5yFYECnxvXLSy2tkSAEM7pX157YJRqttPlZG40SqcgtBrhYTuG9TD5IN7VKxwSxWSdreT4eoQlKXhIvt+eZ+ihmzXZ3qYBAqVuDBicXgBxmrK+1/3JDi7OPq6pdIVYP0XdG5thZ6GZRTs4POg30QtdFoW+sAl5nwAd/25WYu6VrYyX7t8EcOjasH6cLfj7JqynsiTvb2/UtVq0H5AZV6WLafYlHCUU4j145XEGfdJyitjGcsjnXJHl/XrJqt2GTvq6vurgtX5YA7U10Aa4dLc8MeiTW1EQGEBrvnaTWg6zmQEg5EwzfpzU9W+h3hB+Ax01xv/kuy28hocyQ74WnBp9qua4BdD1nAmjR//tyFbNrD+g0UsVOmdZvDF8beGZA9yhPwUW2b+mxAO3kUubH53/Au9c5lQ7iU4Y1cjPYjpwZ+DxWFZZrmAZk29QxUh2M28=
  - secure: Ce7R1GTTiHZzMBLH+f0MrzWHskhF+ACvw3aqN4DJ7D/jMVUAnB2tSOLFIo/e1+dKu6NxHNRJ5yrRoJpKGyPF79Bcb+MGVgZ2ZILlL4c2uCsmaBfljBAmot0ionEHTKjo9UiQj2SnDuskyyZwBipeh3iB9adxRQblKfruGSxAYYy7sKXkyHdDDggPlJvFIEEAlGGnqs7oTXKWrBEQY1xGNG9/JMyWLvWOHvH10vQAIK4W0WXeJu3VY9ggiTJuUj5ZneRqJbTGoyQaW7/Mxh++WPgsB+M6aojfrhIPTSE1e5FYUB+MzKgmociqorpA49B4wgyRu+rqp5R8Y4LY6SOzPBY5sk1Vde3ZM1gctGXjTvhHF7W8Souo8JBX2fA1LXNxbfG0m2bNF2UC/y/Fwi4y6aycH28oUHTsg9adfqghdOlYwYsi8SezFyIxZ/SG+D7y64sWOWeim9rCIIZQ6SNn5/cejkGvIGVVa4Ofm9i91QSXr+hYKKBIz7hd0plGkGzSMbZORYVDbavptf2MhwnvJc6+ZiIwKe+v1c/g8CV4JDN79cmN6cIXewVsJLXBVA48PfEZzfgFB3ZqLU2qTibtpvHeZcAG79aO78RlXtY/hWr93FKKct7wkbc8Q6OtV56cx06sUzfJXjd/m7DghXZ+neF6gWLA2nhgDyCN6Rgpdq4=
  - secure: NuONAxDJ07zF6rX1zjdImAMdxEYny7CigdqMi5CM6EIoZgg4YSw1aznHowaHFVhBYFPDImsPHiZXv6PilCHy6YfJ8GELFHQfAiY5G1uZp+pNKVYqeDAJcJ55FQcpnL7Wo4FXmIb5/UOx0PJGdy1IgTOjLtPNGH2UQSf7LMLnqZjTQAbNdqBQh6Y3pMyyT2YBsLprNB2wnnmI+m/irjYM+r1TQwZnVnDjhsEmfe3HBOFr+lzotPo/irBar3BNMgezK7OaRrotl43ysuOU9iUjETNUkptKh1Tj4l/ZPgNaUib8FzIL4ExlXGq2UThbI/yedTYL9eHkSxlIIdf9CNdCFSmWjkeZEMScNmZaJXi2y2R27VSG3Ooip+02vJDYycM9d+mYP6jxKF2+vqp9SU5cbCXRjow5sGuF9Xl4hIN5Uk7ELWSaLcBvlTC/5jz4jV2ZRH6d2txLXZsMorCvU+4hmyQuEneoxTYBtWf5x5ePX3ng91U220jdBc9pCeEQoALX+OfPFtuhNd+ObxAU8cupanly8pcCZofLnLIKtd5UTK6xy2A0FuiNxdUJSZRvfVudPnaCw4HUIQbO3ypflr1V+YNpLKyzoWyVhG4Fle2oQaFMWiF3AmwiNHZ0Zta1xkgiMZyixuMsg7y+AXHnzeU9rkkjhIywdlq5j6Xnr0f0QxY=
